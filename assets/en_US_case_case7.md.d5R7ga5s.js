import{_ as e,a as r}from"./chunks/webssh.C2tqG0xr.js";import{_ as a,c as t,o,a4 as n}from"./chunks/framework.BmdFiWrL.js";const _=JSON.parse('{"title":"Broker for Nezha - Advancing on more platforms","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en_US/case/case7.md","filePath":"en_US/case/case7.md","lastUpdated":1756917506000}'),i={name:"en_US/case/case7.md"},l=n('<h1 id="broker-for-nezha-advancing-on-more-platforms" tabindex="-1">Broker for Nezha - Advancing on more platforms <a class="header-anchor" href="#broker-for-nezha-advancing-on-more-platforms" aria-label="Permalink to &quot;Broker for Nezha - Advancing on more platforms&quot;">​</a></h1><p>Contributor:</p><ul><li><a href="https://codeberg.org/uubulb" target="_blank" rel="noreferrer">uubulb</a></li></ul><p>Broker for Nezha is a modified version of the Nezha Agent that separates data collection from gRPC reporting, enabling small devices to connect to the Nezha Dashboard.</p><p>Project link: <a href="https://codeberg.org/uubulb/broker" target="_blank" rel="noreferrer">https://codeberg.org/uubulb/broker</a></p><p>Online Documentation: <a href="https://broker.kuzu.uk/" target="_blank" rel="noreferrer">Broker for Nezha</a></p><h2 id="difference-from-nezha-agent" tabindex="-1">Difference from Nezha Agent <a class="header-anchor" href="#difference-from-nezha-agent" aria-label="Permalink to &quot;Difference from Nezha Agent&quot;">​</a></h2><ul><li>Utilizes external data sources to report to <strong>Nezha Dashboard</strong>.</li><li>Supports configuring multiple sources and connecting to multiple Dashboards.</li><li>Only has limited task support. For details, view the project README.</li></ul><p>Broker for Nezha needs to be used with specific data collection software. Currently, it provides two data collection methods:</p><ol><li>HTTP (HTTP/1.1) - Active polling</li><li>TCP - Passive collection (recommended to avoid creating redundant connections)</li></ol><p>For existing data collection software, refer to the project README. Due to security concerns, it&#39;s recommended to use this only in a trusted network.</p><h2 id="writing-a-data-collector" tabindex="-1">Writing a Data Collector <a class="header-anchor" href="#writing-a-data-collector" aria-label="Permalink to &quot;Writing a Data Collector&quot;">​</a></h2><p>If you need to write your own data collector, you&#39;ll need to implement a basic HTTP server or TCP client and use a specific data format that Broker can recognize. For details, see: <a href="https://broker.kuzu.uk/en/configuration/type/" target="_blank" rel="noreferrer">Data types</a></p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><figure><img src="'+e+'" alt="Dashboard"><figcaption style="font-size:0.9em;color:gray;text-align:center;"> Dashboard </figcaption></figure><br><figure><img src="'+r+'" alt="WebSSH"><figcaption style="font-size:0.9em;color:gray;text-align:center;"> WebSSH </figcaption></figure>',17),s=[l];function c(d,f,p,h,u,m){return o(),t("div",null,s)}const k=a(i,[["render",c]]);export{_ as __pageData,k as default};
